version: "3.2"

volumes:
  db-data:
  pronunciation-cache:
  wavs:
  letsencrypt:

services:
  traefik:
    image: traefik:v2.9
    ports:
      - 28080:8080
      - ${HTTP_PORT}:80
      - ${HTTPS_PORT}:443
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.tlsresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.tlsresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.tlsresolver.acme.email=tiro@tiro.is"
      - "--certificatesresolvers.tlsresolver.acme.storage=/letsencrypt/acme.json"

  rabbitmq:
    image: rabbitmq:3.9.13-management
    ports:
      - 15672:15672
    restart: on-failure

  db:
    image: postgres:14.3
    ports:
      - 6543:5432
    environment:
      POSTGRES_PASSWORD: django
      POSTGRES_USER: django
      POSTGRES_DB: captini
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: on-failure

  frontend:
    build:
      context: frontend/captini-angular-frontend/frontEndCaptini
      dockerfile: ../../Dockerfile
      args:
        ROOT_URL: ${ROOT_URL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=tlsresolver"
      - "traefik.http.routers.frontend-dev.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend-dev.entrypoints=web"
    restart: on-failure

  backend:
    build:
      context: backend/captini-django-backend
    ports:
      - 8083:8000
    environment:
      SECRET_KEY: "${BACKEND_SECRET_KEY}"
      DATABASE_NAME: captini
      DATABASE_USER: django
      DATABASE_HOST: db
      DATABASE_PASSWORD: django
      EMAIL_HOST_PASSWORD: "${EMAIL_HOST_PASSWORD}"
      EMAIL_HOST_USER: "${EMAIL_HOST_USER}"
      SENDGRID_API_KEY: "${SENDGRID_API_KEY}"
      RESET_PASSWORD_LINK: "${RESET_PASSWORD_LINK}"
      TEMPLATE_ID: "${TEMPLATE_ID}"
    volumes:
      - wavs:/app/recordings
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/captini/`, `/admin/`, `/account/`, `/recordings/`, `/static/`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=tlsresolver"
      - "traefik.http.routers.backend-dev.rule=PathPrefix(`/captini/`, `/admin/`, `/account/`, `/recordings/`, `/static/`)"
      - "traefik.http.routers.backend-dev.entrypoints=web"
    restart: on-failure

  module-pronunciation:
    build:
      context: modules/pronunciation/pronunciation-score-icelandic
      dockerfile: ../Dockerfile
    command:
      - --wav-dir=/wavs/
    volumes:
      - pronunciation-cache:/cache
      - wavs:/wavs
    restart: on-failure

  module-scoring:
    build:
      context: modules/scoring
    restart: on-failure
